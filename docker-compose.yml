version: "3.7"
services:
  nginx:
    build:
      context: .
      dockerfile: ./docker/Dockerfile-ngnix
    volumes:
      - ./:/var/www/project/:cached
    ports:
      - "8000:80" # Ports that are exposed, you can connect to port 8001 to port 80 of the container.
    environment:
      - VIRTUAL_HOST=dockerized.symfony.test
      - VIRTUAL_PORT=8000
    expose:
      - "8000"
    networks:
      - symfony
  fpm:
    build: # Info to build the Docker image
      context: . # Specify where the Dockerfile is located (e.g. in the root directory of the project)
      dockerfile: ./docker/Dockerfile-php # Specify the name of the Dockerfile
    environment: # You can use this section to set environment variables. But you can also use the .env file.
      - DATABASE_URL=mysql://root:root@db/docker_sf
    volumes:
      - ./:/var/www/project/:cached # Location of the project for php-fpm. Note this should be the same for NGINX.*
    networks:
      - symfony # Docker containers (services) that need to connect to each other should be on the same network.
  database: #address
    image: mariadb:10.2.29
    ports:
      - "3317:3306" #outside:inside docker container from-within
    environment:
      - MYSQL_DATABASE=docker_sf
      - MYSQL_ROOT_PASSWORD=root
    volumes:
      - ./persistent:/var/lib/mysql
      - ./docker/build/db/:/docker-entrypoint-initdb.d/
    networks:
      - symfony
  nginx-proxy:
    image: nginxproxy/nginx-proxy
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro

###> doctrine/doctrine-bundle ###
#  database:
#    image: postgres:${POSTGRES_VERSION:-15}-alpine
#    environment:
#      POSTGRES_DB: ${POSTGRES_DB:-app}
#      # You should definitely change the password in production
#      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
#      POSTGRES_USER: ${POSTGRES_USER:-app}
#    volumes:
#      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
volumes:
  database_data:
###< doctrine/doctrine-bundle ###
networks:
  symfony:
